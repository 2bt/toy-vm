func min(a, b):
    if a < b: return a
    return b
func max(a, b):
    if a > b: return a
    return b
func clamp(x, a, b):
    if x < a: return a
    if x > b: return b
    return x
func abs(x):
    if x >= 0: return x
    return -x

var format_str: int[10]

func int_to_str(n):
    if n == 0:
        format_str[0] = 48
        format_str[1] = 0
        return 1

    var len = 0
    var p = format_str.ptr
    if n < 0:
        n *= -1
        p@ = 45     # sign
        p += 1
        len += 1

    var q = p
    while n:
        p@ = n % 10 + 48
        n /= 10
        p += 1
        len += 1

    p@ = 0
    p -= 1
    while q < p:
        n = p@
        p@ = q@
        q@ = n
        p -= 1
        q += 1

    return len


func putchar(x, y, c):
    sprite(x, y, 8, 8, c % 32 * 8, (c / 32 - 1) * 8, 0)

func print(x, y, msg: int*):
    while msg@:
        putchar(x, y, msg@)
        x += 8
        msg += 1

func box_intersect(ax, ay, aw, ah, bx, by, bw, bh):
    return ax < bx + bw and ax + aw > bx and ay < by + bh and ay + ah > by
func box_overlap_x(ax, ay, aw, ah, bx, by, bw, bh):
    if not box_intersect(ax, ay, aw, ah, bx, by, bw, bh): return 0
    var d1 = bx + bw - ax
    var d2 = bx - (ax + aw)
    if abs(d1) < abs(d2): return d1
    return d2
func box_overlap_y(ax, ay, aw, ah, bx, by, bw, bh):
    if not box_intersect(ax, ay, aw, ah, bx, by, bw, bh): return 0
    var d1 = by + bh - ay
    var d2 = by - (ay + ah)
    if abs(d1) < abs(d2): return d1
    return d2

