include "prelude.toy"

const Q = 256

var x = SCREEN_W/2 - 16
var y = SCREEN_H/2 - 16

struct Ball
    x: int
    y: int
    vx: int
    vy: int
end

var balls: Ball[1000]
var p: Ball*



var line1: int[] = "hello world\0"


func init()
    p = balls.ptr
    while p < balls.limit do
        p.x  = rand(0, SCREEN_W-1) * Q
        p.y  = rand(0, SCREEN_H-1) * Q
        p.vx = rand(-100, 100)
        p.vy = rand(-100, 100)
        p += 1
    end
end



func print(x, y, msg: int*)
    while msg@ do
        sprite(x, y, 8, 8, msg@ % 32 * 8, (msg@ / 32 - 1) * 8, 0)
        x += 8
        msg += 1
    end
end


func update()
    p = balls.ptr
    while p < balls.limit do
        p.x += p.vx
        p.y += p.vy
        if p.x < 0 or p.x >= (SCREEN_W) * Q then p.vx *= -1 end
        if p.y < 0 or p.y >= (SCREEN_H) * Q then p.vy *= -1 end
        sprite(p.x / Q, p.y / Q, 1, 1, 0, 64, 0)
        p += 1
    end

    if btn & BTN_LEFT  then x -= 2 end
    if btn & BTN_RIGHT then x += 2 end
    if btn & BTN_UP    then y -= 2 end
    if btn & BTN_DOWN  then y += 2 end


    sprite(x, y, 32, 32, 0, 32, 0)


    print(0, 0, line1.ptr)
end