const SOUND_BING    = 0
const SOUND_BLOCK   = 1
const SOUND_UNSTICK = 2
const SOUND_DIE     = 3
const SOUND_SPIN    = 4
const SOUND_NOSPIN  = 5

const SNDCMD_DONE       = 0
const SNDCMD_SET_PITCH  = 1
const SNDCMD_INC_PITCH  = 2
const SNDCMD_SET_VOL    = 3
const SNDCMD_INC_VOL    = 4
const SNDCMD_SET_PW     = 5
const SNDCMD_INC_PW     = 6
const SNDCMD_SET_WAVE   = 7
const SNDCMD_WAIT       = 8
const SNDCMD_LOOP_START = 9
const SNDCMD_LOOP_END   = 10


struct SoundCommandStream
    voice: Voice*
    pos:   int*
    loop:  int*
    wait:  int
end

struct SoundEffect
    stream: SoundCommandStream*
    start:  int*
end

var SOUND_COMMANDS_BING: int[] = {
    SNDCMD_SET_WAVE,    WAVE_NOISE,
    SNDCMD_SET_VOL,     60,
    SNDCMD_SET_PITCH,   100 * 8,
    SNDCMD_WAIT,        1,
    SNDCMD_SET_PITCH,   32 * 8,
    SNDCMD_INC_VOL,     -20,
    SNDCMD_WAIT,        1,
    SNDCMD_SET_PITCH,   10 * 8,
    SNDCMD_INC_VOL,     -20,
    SNDCMD_WAIT,        1,
    SNDCMD_SET_VOL,     0,
    SNDCMD_DONE,
}

var SOUND_COMMANDS_BLOCK: int[] = {
    SNDCMD_SET_WAVE,    WAVE_NOISE,
    SNDCMD_SET_PITCH,   40 * 8,
    SNDCMD_SET_VOL,     100,
    SNDCMD_LOOP_START,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_VOL,     -10,
    SNDCMD_LOOP_END,
}

var SOUND_COMMANDS_UNSTICK: int[] = {
    SNDCMD_SET_VOL,     60,
    SNDCMD_SET_WAVE,    WAVE_PULSE,
    SNDCMD_SET_PW,      128,
    SNDCMD_SET_PITCH,   44 * 8,
    SNDCMD_LOOP_START,
    SNDCMD_WAIT,        2,
    SNDCMD_INC_PITCH,   7 * 8,
    SNDCMD_WAIT,        2,
    SNDCMD_INC_PITCH,   7 * 8,
    SNDCMD_WAIT,        2,
    SNDCMD_INC_PITCH,   -14 * 8,
    SNDCMD_INC_PW,      10,
    SNDCMD_INC_VOL,     -20,
    SNDCMD_LOOP_END,
}

var SOUND_COMMANDS_DIE: int[] = {
    SNDCMD_SET_VOL,     90,
    SNDCMD_SET_WAVE,    WAVE_PULSE,
    SNDCMD_SET_PW,      0,
    SNDCMD_SET_PITCH,   44 * 8,
    SNDCMD_LOOP_START,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   -20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   -20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   -20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   -20,
    SNDCMD_INC_PW,      1,
    SNDCMD_WAIT,        1,
    SNDCMD_INC_PITCH,   -25,
    SNDCMD_INC_VOL,     -20,
    SNDCMD_LOOP_END,
}

var SOUND_COMMANDS_SPIN: int[] = {
    SNDCMD_SET_WAVE,    WAVE_PULSE,
    SNDCMD_SET_VOL,     40,
    SNDCMD_SET_PW,      0,
    SNDCMD_SET_PITCH,   38 * 8,
    SNDCMD_LOOP_START,
    SNDCMD_WAIT,        2,
    SNDCMD_INC_PITCH,   12 * 8,
    SNDCMD_INC_PW,      2,
    SNDCMD_WAIT,        2,
    SNDCMD_INC_PITCH,   12 * 8,
    SNDCMD_WAIT,        2,
    SNDCMD_INC_PITCH,   12 * 8,
    SNDCMD_WAIT,        2,
    SNDCMD_INC_PITCH,   -12 * 3 * 8,
    SNDCMD_INC_VOL,     -1,
    SNDCMD_LOOP_END,
}
var SOUND_COMMANDS_NOSPIN: int[] = {
    SNDCMD_SET_VOL,     0,
    SNDCMD_DONE,
}


var sound_command_streams: SoundCommandStream[] = {
    { &voices[0] },
    { &voices[1] },
    { &voices[2] },
}

var sound_effects: SoundEffect[] = {
    { &sound_command_streams[0], SOUND_COMMANDS_BING.ptr    },
    { &sound_command_streams[1], SOUND_COMMANDS_BLOCK.ptr   },
    { &sound_command_streams[1], SOUND_COMMANDS_UNSTICK.ptr },
    { &sound_command_streams[1], SOUND_COMMANDS_DIE.ptr     },
    { &sound_command_streams[2], SOUND_COMMANDS_SPIN.ptr    },
    { &sound_command_streams[2], SOUND_COMMANDS_NOSPIN.ptr  },
}


func sound(s)
    var effect = &sound_effects[s]
    effect.stream.pos  = effect.start
    effect.stream.wait = 0
end


func update_sound()
    for var s = sound_command_streams.ptr, s < sound_command_streams.limit, s += 1 do
        var voice = s.voice
        while s.pos do
            if s.wait > 0 then
                s.wait -= 1
                break
            end
            var cmd = s.pos@
            s.pos += 1
            var val = s.pos@
            if cmd == SNDCMD_SET_PITCH then
                voice.pitch = val
                s.pos += 1
            elif cmd == SNDCMD_INC_PITCH then
                voice.pitch += val
                s.pos += 1
            elif cmd == SNDCMD_SET_VOL then
                voice.vol = val
                s.pos += 1
            elif cmd == SNDCMD_INC_VOL then
                voice.vol += val
                s.pos += 1
            elif cmd == SNDCMD_SET_PW then
                voice.pw = val
                s.pos += 1
            elif cmd == SNDCMD_INC_PW then
                voice.pw += val
                s.pos += 1
            elif cmd == SNDCMD_SET_WAVE then
                voice.wave = val
                s.pos += 1
            elif cmd == SNDCMD_WAIT then
                s.wait = val
                s.pos += 1
            elif cmd == SNDCMD_LOOP_START then
                s.loop = s.pos
            elif cmd == SNDCMD_LOOP_END then
                s.pos = s.loop
            elif cmd == SNDCMD_DONE then
                s.pos = 0
                break
            end
        end
    end
end

